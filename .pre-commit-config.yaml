repos:

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v2.3.0
    hooks:
      # Automatically add trailing commas to calls and literals.
      - id: add-trailing-comma
        exclude: ^[lib/, bin/]

  # Black is a Python code formatter and ensures that our code is consistently formatted.
  - repo: https://github.com/ambv/black
    rev: 23.7.0
    hooks:
      - id: black
        additional_dependencies: ['click==8.0.4']
        args: [
          --skip-string-normalization, # black is opinionated towards "" strings by default, skip that check
          --line-length=99
        ]
        exclude: ^[lib/, bin/]

  # Isort is a Python utility to sort imports accordingly to PEP-8
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [ "--settings-path=.isort.cfg" ]
        exclude: ^[lib/, bin/]

  # Some out-of-the-box hooks for pre-commit
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      # Simply check whether files parse as valid python.
      - id: check-ast
        exclude: ^[lib/, bin/]

      # Checks for a common error of placing code before the docstring.
      - id: check-docstring-first
        exclude: ^[lib/, bin/]

      # Check for debugger imports and py37+ breakpoint() calls in python source.
      - id: debug-statements
        exclude: ^[lib/, bin/]

      # Prevent addition of new git submodules.
      - id: forbid-new-submodules
        exclude: ^[lib/, bin/]

      # Replaces or checks mixed line ending.
      - id: mixed-line-ending
        exclude: ^[lib/, bin/]

      # Trims trailing whitespace.
      - id: trailing-whitespace
        exclude: ^[lib/, bin/]

      # Makes sure files end in a newline and only a newline.
      - id: end-of-file-fixer
        exclude: ^[lib/, bin/]

      # # Assert that files in tests/ match test*.py.
      # - id: name-tests-test
      #   args: [--django]

      #  Prevent giant files from being committed (default=500kB).
      - id: check-added-large-files
        exclude: ^[lib/, bin/]

      # Check for files with names that would conflict on a case-insensitive filesystem like MacOS HFS+ or Windows FAT.
      - id: check-case-conflict
        exclude: ^[lib/, bin/]

      # Check for files that contain merge conflict strings.
      - id: check-merge-conflict
        exclude: ^[lib/, bin/]

      # Checks for symlinks which do not point to anything.
      - id: check-symlinks
        exclude: ^[lib/, bin/]

      # Replaces double quoted strings with single quoted strings.
      - id: double-quote-string-fixer
        exclude: ^[lib/, bin/]

      # Remove # -*- coding: utf-8 -*- to the top of python files.
      - id: fix-encoding-pragma
        args: [--remove]
        exclude: ^[lib/, bin/]

      # Ensures that links to vcs websites are permalinks.
      - id: check-vcs-permalinks
        exclude: ^[lib/, bin/]

      # Attempts to load all json files to verify syntax.
      - id: check-json
        exclude: ^[lib/, bin/]

      #  Protect specific branches from direct checkins.
      - id: no-commit-to-branch
        args: [
          -b dev,
          -b master
        ]
        exclude: ^[lib/, bin/]

      # Checks that all your JSON files are "pretty".
      - id: pretty-format-json
        args: [
          --autofix,
          --no-sort-keys,
          --no-ensure-ascii
        ]
        exclude: ^[lib/, bin/]

      # Attempts to load all yaml files to verify syntax.
      - id: check-yaml
        exclude: ^[lib/, bin/]

      # Sorts simple YAML files which consist only of top-level keys, preserving comments and blocks.
      - id: sort-simple-yaml
        exclude: ^[lib/, bin/]

  - repo: https://github.com/pycqa/flake8
    rev: 3.8.3
    hooks:
      # Run flake8 on python files.
      - id: flake8
        args: [
          --max-line-length=99,
          --max-complexity=24,
          --ignore=** W503
          --ignore=**/__init__.py F401 F403
        ]
        exclude: ^[lib/, bin/]
